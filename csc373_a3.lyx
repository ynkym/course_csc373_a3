#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.5in
\topmargin 0.5in
\rightmargin 0.5in
\bottommargin 0.5in
\headheight 0.5in
\headsep 0.5in
\footskip 0.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSC373 - Assignment 3
\end_layout

\begin_layout Author
Minh Le Hoang - Student number : 999 01 9930 | Yorie Nakayama - Student
 number: 998 72 9951 
\end_layout

\begin_layout Enumerate
)
\end_layout

\begin_deeper
\begin_layout Enumerate
Verification algorithm:
\end_layout

\begin_deeper
\begin_layout Itemize
High-level idea behind:
\end_layout

\begin_deeper
\begin_layout Standard
Giving graph 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 in form of adjacency matrix and certificate which is the mapping function
 
\begin_inset Formula $f$
\end_inset

 .
\end_layout

\begin_layout Standard
\begin_inset Formula $f$
\end_inset

 is an array having 
\begin_inset Formula $|V(G)|$
\end_inset

 elements and 
\begin_inset Formula $f[u]=f(u)$
\end_inset


\end_layout

\begin_layout Standard
The vertifier will check if the function will do the mapping properly which
 is for all 
\begin_inset Formula $vu\in E(G)$
\end_inset

, 
\begin_inset Formula $f(v)f(u)\in E(H)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Pseudo-code
\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
V(G,H,f):
\end_layout

\begin_deeper
\begin_layout Quote
For 
\begin_inset Formula $u\in V(G)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Quote
For 
\begin_inset Formula $v\in V(G)\backslash u$
\end_inset


\end_layout

\begin_deeper
\begin_layout Quote
If 
\begin_inset Formula $uv\in E(G)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Quote
If 
\begin_inset Formula $f(u)f(v)\notin E(G)$
\end_inset

 then Return false 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Quote
Return true
\end_layout

\end_deeper
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Input size.
\end_layout

\begin_deeper
\begin_layout Standard
Because the 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 are in the form of adjacency matrix .
 Then the size of the input 
\begin_inset Formula $n=O(|V(G)|^{2}+|V(H)|^{2})$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Size of vertifier
\end_layout

\begin_deeper
\begin_layout Standard
Then the size of the certificate is 
\begin_inset Formula $O(|V(G)|)$
\end_inset

 because it is an array having 
\begin_inset Formula $|V(G)|\in O(\sqrt{n})$
\end_inset

 elements
\end_layout

\end_deeper
\begin_layout Enumerate
Veritifier running time.
\end_layout

\begin_deeper
\begin_layout Standard
Assume that a mapping of function 
\begin_inset Formula $f$
\end_inset

 takes constant time.
 And a check if an edge is in the graph or not also takes constant time.
 Then the total running time of the vertifier is 
\begin_inset Formula $O(|V(G)|^{2})\in O(n)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Why the vertifier works ?
\end_layout

\begin_deeper
\begin_layout Standard
Assume 
\begin_inset Formula $<G,H>\in GraphHomo$
\end_inset

, then there is function 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 so that for all 
\begin_inset Formula $vu\in E(G)$
\end_inset

, 
\begin_inset Formula $f(v)f(u)\in E(H)$
\end_inset

.
 Then when given 
\begin_inset Formula $G,H,f$
\end_inset

, it doesnt exist any two nodes 
\begin_inset Formula $u,v\in V(G)$
\end_inset

 so that 
\begin_inset Formula $uv\in E(G)$
\end_inset

 and 
\begin_inset Formula $f(u)f(v)\notin E(G)$
\end_inset

 to make the vertifier return false.
 Then the vertifier will return True .
 Then there is a certificate so that the vertifier will accept it 
\end_layout

\begin_layout Standard
Assume 
\begin_inset Formula $<G,H>\notin GraphHomo$
\end_inset

, then there is no function 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 so that for all 
\begin_inset Formula $vu\in E(G)$
\end_inset

, 
\begin_inset Formula $f(v)f(u)\in E(H)$
\end_inset

.
 Then when given 
\begin_inset Formula $G,H,f$
\end_inset

, it always exists two nodes 
\begin_inset Formula $u,v\in V(G)$
\end_inset

 so that 
\begin_inset Formula $uv\in E(G)$
\end_inset

 and 
\begin_inset Formula $f(u)f(v)\in E(G)$
\end_inset

 to make the vertifier return True.
 Then the vertifier always returns False.
 Then there is no certificate so that the vertifier will accept it 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
)
\end_layout

\begin_layout Enumerate
)
\end_layout

\begin_layout Enumerate
)
\end_layout

\begin_layout Enumerate
)
\end_layout

\begin_deeper
\begin_layout Standard
Giving
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 be two graphs with set of nodes 
\begin_inset Formula $V(G)$
\end_inset

 and 
\begin_inset Formula $V(H)$
\end_inset

 and sets of edges 
\begin_inset Formula $E(G)$
\end_inset

 and 
\begin_inset Formula $E(H)$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $E_{G-u-v}$
\end_inset

 is a boolean value so that with 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $u\in V(G)$
\end_inset

 and 
\begin_inset Formula $v\in V(G)$
\end_inset

 then 
\begin_inset Formula $uv\in E(G)\iff E_{G-u-v}$
\end_inset

 is true.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $E_{H-k_{1}-k_{2}}$
\end_inset

 is a boolean value so that with 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $k_{1}\in V(G)$
\end_inset

 and 
\begin_inset Formula $k_{2}\in V(G)$
\end_inset

 then 
\begin_inset Formula $k_{1}k_{2}\in E(H)\iff E_{H-k_{1}-k_{2}}$
\end_inset

 is true
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $mapNode_{u-k}$
\end_inset

 is a boolean variable so that with 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $u\in V(G)$
\end_inset

 and 
\begin_inset Formula $k\in V(H)$
\end_inset

 then 
\begin_inset Formula $f$
\end_inset

 maps 
\begin_inset Formula $u$
\end_inset

 to 
\begin_inset Formula $k$
\end_inset

 
\begin_inset Formula $\iff mapNode_{u-k}$
\end_inset

 is true.
\end_layout

\begin_layout Standard
Let define 
\begin_inset Formula $mapping_{u}$
\end_inset

 is boolean formula so that function 
\begin_inset Formula $f$
\end_inset

 maps node 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $u\in V(G)$
\end_inset

 to only one node 
\begin_inset Formula $k\in V(H)\iff mapping_{u}$
\end_inset

 is true.
 Then
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\end_layout

\begin_layout Standard
\begin_inset Formula $mapping_{u}=\bigvee_{k\in V(H)}\left(\left(\bigwedge_{k_{2}\in V(H)\backslash k}\left(\overline{mapNode_{u-k_{2}}}\right)\right)\wedge mapNode_{u-k}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Then every 
\begin_inset Formula $mapping_{u}$
\end_inset

 has 
\begin_inset Formula $|V(H)|*|V(H)|$
\end_inset

 literals
\end_layout

\begin_layout Standard
Let define 
\begin_inset Formula $MAPPING$
\end_inset

 is a boolean formula so that function 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 is a many to one function if and only if 
\begin_inset Formula $MAPPING$
\end_inset

 is true.
 Then
\end_layout

\begin_layout Standard
\begin_inset Formula $MAPPING=\bigwedge_{u\in V(G)}\left(mapping_{u}\right)$
\end_inset


\end_layout

\begin_layout Standard
Then 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $MAPPING$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 has 
\begin_inset Formula $|V(H)|^{2}*|V(G)|$
\end_inset

 literals.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Let 
\begin_inset Formula $preservingEdge_{u-v-k_{1}-k_{2}}$
\end_inset

 be a formula so that 
\begin_inset Formula $preservingEdge_{u-v-k_{1}-k_{2}}$
\end_inset

 is true if and only if with 
\begin_inset Formula $u,v\in V(G)$
\end_inset

 and 
\begin_inset Formula $k_{1},k_{2}\in V(H)$
\end_inset

 and 
\begin_inset Formula $f$
\end_inset

 maps 
\begin_inset Formula $u$
\end_inset

 to 
\begin_inset Formula $k_{1}$
\end_inset

 and 
\begin_inset Formula $f$
\end_inset

 maps 
\begin_inset Formula $v$
\end_inset

 to 
\begin_inset Formula $k_{2}$
\end_inset

 if 
\begin_inset Formula $uv\in E(G)\rightarrow k_{1}k_{2}\in E(H)$
\end_inset

 .
 Then
\end_layout

\begin_layout Standard
\begin_inset Formula $preservingEdge_{u-v-k_{1}-k_{2}}=\left(mapNode_{u-k_{1}}\wedge mapNode_{v-k_{2}}\wedge E_{G-u-v}\right)\rightarrow E_{H-k_{1}-k_{2}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $=\overline{\left(mapNode_{u-k_{1}}\wedge mapNode_{v-k_{2}}\wedge E_{G-u-v}\right)}\vee E_{H-k_{1}-k_{2}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $=\overline{mapNode_{u-k_{1}}}\vee\overline{mapNode_{v-k_{2}}}\vee\overline{E_{G-u-v}}\vee E_{H-k_{1}-k_{2}}$
\end_inset

.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Then for every 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $preservingEdge_{u-v-k_{1}-k_{2}}$
\end_inset

 formula there are only 2 literals
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $PRESERVING\_EDGE$
\end_inset

 is a formula so that 
\begin_inset Formula $PRESERVING\_EDGE$
\end_inset

 is True if 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left[\left(f\: maps\: u\: to\: k_{1}\right)\wedge\left(f\: maps\: v\: to\: k_{2}\right)\wedge\left(uv\in E(G)\right)\right]\rightarrow\left(k_{1}k_{2}\in E(H)\right)$
\end_inset

.
 Then 
\end_layout

\begin_layout Standard
\begin_inset Formula $PRESERVING\_EDGE=\bigwedge_{u\in V(G)}\left(\bigwedge_{v\in V(G)\backslash u}\left(\bigwedge_{k_{1}\in V(H)}\left(\bigwedge_{k_{2}\in V(H)\backslash k_{1}}\left[preservingEdge_{u-v-k_{1}-k_{2}}\right]\right)\right)\right)$
\end_inset

.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Then 
\begin_inset Formula $PRESERVING\_EDGE$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 has 
\begin_inset Formula $|V(G)|*\left(|V(G)|-1\right)*|V(H)|*\left(|V(H)|-1\right)*2$
\end_inset

 literals
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $Homomorphism$
\end_inset

 be a formula so that 
\begin_inset Formula $Homomorphism$
\end_inset

 is true if and only if 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 is a many to one function and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left[\left(f\: maps\: u\: to\: k_{1}\right)\wedge\left(f\: maps\: v\: to\: k_{2}\right)\wedge\left(uv\in E(G)\right)\right]\rightarrow\left(k_{1}k_{2}\in E(H)\right)$
\end_inset

.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Then 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $Homomorphism=PRESERVING\_EDGE\wedge MAPPING$
\end_inset

 .
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Then 
\begin_inset Formula $PRESERVING\_EDGE$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 has 
\begin_inset Formula $\left[|V(G)|*\left(|V(G)|-1\right)*|V(H)|*\left(|V(H)|-1\right)*2\right]+|V(H)|^{2}*|V(G)|$
\end_inset

 literals.
\end_layout

\begin_layout Standard
We have 
\begin_inset Formula $\left[|V(G)|*\left(|V(G)|-1\right)*|V(H)|*\left(|V(H)|-1\right)*2\right]+|V(H)|^{2}*|V(G)|\in O\left(|V(H)|^{2}*|V(G)|^{2}\right)$
\end_inset

 
\end_layout

\begin_layout Standard
Then given 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

,
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $Homomorphism$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 can be found in polynomial time.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Let 
\begin_inset Formula $<G,H>$
\end_inset

 is the string contains all information about graph 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
If 
\begin_inset Formula $<G,H>\in GraphHomo$
\end_inset

, then 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
then according to the literals we can define a many to one function 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 so that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left(uv\in E(G)\right)\rightarrow\left(f(u)f(v)\in E(H)\right)$
\end_inset

 or 
\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left[\left(f(u)=k_{1}\right)\wedge\left(f(v)=k_{2}\right)\wedge\left(uv\in E(G)\right)\right]\rightarrow\left(k_{1}k_{2}\in E(H)\right)$
\end_inset

, then 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $Homomorphism$
\end_inset

 is satisfiable.
 Then 
\begin_inset Formula $Homomorphism\in SAT$
\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $Homomorphism\in SAT$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
, then 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $Homomorphism$
\end_inset

 is satisfiable.
 Then according to the literals we can define a many to one function 
\begin_inset Formula $f:V(G)\rightarrow V(H)$
\end_inset

 so that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left[\left(f(u)=k_{1}\right)\wedge\left(f(v)=k_{2}\right)\wedge\left(uv\in E(G)\right)\right]\rightarrow\left(k_{1}k_{2}\in E(H)\right)$
\end_inset

 or 
\begin_inset Formula $\forall u,v\in V(G).\forall k_{1},k_{2}\in V(H).\left(uv\in E(G)\right)\rightarrow\left(f(u)f(v)\in E(H)\right)$
\end_inset

.
 Then 
\begin_inset Formula $<G,H>\in GraphHomo$
\end_inset


\end_layout

\begin_layout Standard
Then 
\begin_inset Formula $GraphHomo\leq_{p}SAT$
\end_inset

.
\end_layout

\end_deeper
\end_body
\end_document
